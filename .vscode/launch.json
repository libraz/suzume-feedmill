{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Debug CLI",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/suzume-feedmill",
      "args": [
        "normalize",
        "examples/output/simple-text.txt",
        "examples/output/simple-normalized.tsv"
      ],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "lldb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for lldb",
          "text": "settings set target.inline-breakpoint-strategy always",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "CMake Build",
      "osx": {
        "MIMode": "lldb"
      },
      "linux": {
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      },
      "windows": {
        "MIMode": "gdb",
        "miDebuggerPath": "gdb.exe",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    },
    {
      "name": "Debug Tests",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/tests/suzume_feedmill_test",
      "args": [],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "lldb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for lldb",
          "text": "settings set target.inline-breakpoint-strategy always",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "CMake Build",
      "osx": {
        "MIMode": "lldb"
      },
      "linux": {
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      },
      "windows": {
        "MIMode": "gdb",
        "miDebuggerPath": "gdb.exe",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    },
    {
      "name": "Debug Example",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceFolder}/build/examples/simple-word-extraction",
      "args": ["examples/output/simple-text.txt", "examples/output"],
      "stopAtEntry": false,
      "cwd": "${workspaceFolder}",
      "environment": [],
      "externalConsole": false,
      "MIMode": "lldb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for lldb",
          "text": "settings set target.inline-breakpoint-strategy always",
          "ignoreFailures": true
        }
      ],
      "preLaunchTask": "CMake Build",
      "osx": {
        "MIMode": "lldb"
      },
      "linux": {
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      },
      "windows": {
        "MIMode": "gdb",
        "miDebuggerPath": "gdb.exe",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    },
    {
      "name": "Debug Node.js Tests",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/node_modules/.bin/jest",
      "args": ["--runInBand"],
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen",
      "disableOptimisticBPs": true
    }
  ]
}
